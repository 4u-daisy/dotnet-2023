// <auto-generated />
using System;
using DotNet2023.WebApi.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNet2023.WebApi.Migrations
{
    [DbContext(typeof(DbContextWebApi))]
    partial class DbContextWebApiModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DotNet2023.Domain.InstituteDocumentation.InstituteSpeciality", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdHigherEducationInstitution")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdSpeciality")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Key");

                    b.HasIndex("IdHigherEducationInstitution");

                    b.HasIndex("IdSpeciality");

                    b.ToTable("InstituteSpecialties");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstituteDocumentation.Speciality", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("StudyFormat")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.HasKey("Code");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstitutionStructure.BaseSection", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<string>("Name")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("BaseSection");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseSection");
                });

            modelBuilder.Entity("DotNet2023.Domain.Organization.Organization", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<string>("FullName")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("Initials")
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<string>("LegalAddress")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.HasKey("Id");

                    b.ToTable("Organization");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Organization");
                });

            modelBuilder.Entity("DotNet2023.Domain.Person.BasePerson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<string>("Name")
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Surname")
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.HasKey("Id");

                    b.ToTable("BasePerson");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BasePerson");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstitutionStructure.Department", b =>
                {
                    b.HasBaseType("DotNet2023.Domain.InstitutionStructure.BaseSection");

                    b.Property<string>("HeadOfDepartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdFaculty")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdHeadOfDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdInstitute")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("HeadOfDepartmentId");

                    b.HasIndex("IdFaculty");

                    b.HasIndex("IdInstitute");

                    b.HasDiscriminator().HasValue("Department");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstitutionStructure.Faculty", b =>
                {
                    b.HasBaseType("DotNet2023.Domain.InstitutionStructure.BaseSection");

                    b.Property<string>("DeanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdDean")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdInstitute")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Faculty_IdInstitute");

                    b.HasIndex("DeanId");

                    b.HasIndex("IdInstitute");

                    b.HasDiscriminator().HasValue("Faculty");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstitutionStructure.GroupOfStudents", b =>
                {
                    b.HasBaseType("DotNet2023.Domain.InstitutionStructure.BaseSection");

                    b.Property<string>("IdDepartment")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdSpeciality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialityCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("SpecialityCode");

                    b.HasDiscriminator().HasValue("GroupOfStudents");
                });

            modelBuilder.Entity("DotNet2023.Domain.Organization.HigherEducationInstitution", b =>
                {
                    b.HasBaseType("DotNet2023.Domain.Organization.Organization");

                    b.Property<int?>("BuildingProperty")
                        .HasColumnType("int");

                    b.Property<string>("IdRector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstitutionalProperty")
                        .HasColumnType("int");

                    b.Property<string>("RectorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("RectorId");

                    b.HasDiscriminator().HasValue("HigherEducationInstitution");
                });

            modelBuilder.Entity("DotNet2023.Domain.Person.EducationWorker", b =>
                {
                    b.HasBaseType("DotNet2023.Domain.Person.BasePerson");

                    b.Property<string>("IdOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("Rank")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("ScienceDegree")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.HasDiscriminator().HasValue("EducationWorker");
                });

            modelBuilder.Entity("DotNet2023.Domain.Person.Student", b =>
                {
                    b.HasBaseType("DotNet2023.Domain.Person.BasePerson");

                    b.Property<string>("IdGroup")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdSpeciality")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("SpecialityCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("IdGroup");

                    b.HasIndex("SpecialityCode");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstituteDocumentation.InstituteSpeciality", b =>
                {
                    b.HasOne("DotNet2023.Domain.Organization.HigherEducationInstitution", "HigherEducationInstitution")
                        .WithMany("Specialties")
                        .HasForeignKey("IdHigherEducationInstitution");

                    b.HasOne("DotNet2023.Domain.InstituteDocumentation.Speciality", "Speciality")
                        .WithMany("Institutes")
                        .HasForeignKey("IdSpeciality");

                    b.Navigation("HigherEducationInstitution");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstitutionStructure.Department", b =>
                {
                    b.HasOne("DotNet2023.Domain.Person.EducationWorker", "HeadOfDepartment")
                        .WithMany()
                        .HasForeignKey("HeadOfDepartmentId");

                    b.HasOne("DotNet2023.Domain.InstitutionStructure.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("IdFaculty");

                    b.HasOne("DotNet2023.Domain.Organization.HigherEducationInstitution", "Institute")
                        .WithMany("Departments")
                        .HasForeignKey("IdInstitute");

                    b.Navigation("Faculty");

                    b.Navigation("HeadOfDepartment");

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstitutionStructure.Faculty", b =>
                {
                    b.HasOne("DotNet2023.Domain.Person.EducationWorker", "Dean")
                        .WithMany()
                        .HasForeignKey("DeanId");

                    b.HasOne("DotNet2023.Domain.Organization.HigherEducationInstitution", "Institute")
                        .WithMany("Faculties")
                        .HasForeignKey("IdInstitute");

                    b.Navigation("Dean");

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstitutionStructure.GroupOfStudents", b =>
                {
                    b.HasOne("DotNet2023.Domain.InstitutionStructure.Department", "Department")
                        .WithMany("GroupOfStudents")
                        .HasForeignKey("IdDepartment");

                    b.HasOne("DotNet2023.Domain.InstituteDocumentation.Speciality", "Speciality")
                        .WithMany()
                        .HasForeignKey("SpecialityCode");

                    b.Navigation("Department");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("DotNet2023.Domain.Organization.HigherEducationInstitution", b =>
                {
                    b.HasOne("DotNet2023.Domain.Person.EducationWorker", "Rector")
                        .WithMany()
                        .HasForeignKey("RectorId");

                    b.Navigation("Rector");
                });

            modelBuilder.Entity("DotNet2023.Domain.Person.Student", b =>
                {
                    b.HasOne("DotNet2023.Domain.InstitutionStructure.GroupOfStudents", "Group")
                        .WithMany("Students")
                        .HasForeignKey("IdGroup");

                    b.HasOne("DotNet2023.Domain.InstituteDocumentation.Speciality", "Speciality")
                        .WithMany()
                        .HasForeignKey("SpecialityCode");

                    b.Navigation("Group");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstituteDocumentation.Speciality", b =>
                {
                    b.Navigation("Institutes");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstitutionStructure.Department", b =>
                {
                    b.Navigation("GroupOfStudents");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstitutionStructure.Faculty", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("DotNet2023.Domain.InstitutionStructure.GroupOfStudents", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("DotNet2023.Domain.Organization.HigherEducationInstitution", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Faculties");

                    b.Navigation("Specialties");
                });
#pragma warning restore 612, 618
        }
    }
}
